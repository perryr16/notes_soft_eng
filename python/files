--------------------------------------------
TXT
--------------------------------------------
WITH << invokes the context manager

READ()
  with open('file.txt') as file_object:
    file_data = file_object.read()

READLINES()
  with open('file.txt') as file_object:
    for line in file_object.readlines():
      print(line)

READLINE()
  with open('file.txt') as file_object:
    first_line = file_object.readline()
    second_line = file_object.readline()

WRITE() <<< 'w' = write mode (DELETE AND REWRITE)
  with open('file.txt', 'w') as gen_file:
    gen_file.write("overwrite old with this")
  
APPEND() <<< 'a' = append mode
  with open('file.txt', 'a') as gen_file:
    gen_file.write("add this")
--------------------------------------------
CSV 
--------------------------------------------
READ
  import csv 
  lst = []
  with open('file.csv', newline='') as file_csv:
    file_reader = csv.DictReader(file_csv, delimiter = ';') <<<<< puts key value pairs using header, delimiter default = ','
    for row in file_reader:
      lst.append(row['Key_value'])

  or 

  with open('file.csv') as csv_file:
    content = csv_file.read()

WRITE
  big_list = [{'name': 'Fredrick Stein', 'userid': 6712359021, 'is_admin': False}, {'name': 'Wiltmore Denis', 'userid': 2525942, 'is_admin': False}, {'name': 'Greely Plonk', 'userid': 15890235, 'is_admin': False}, {'name': 'Dendris Stulo', 'userid': 572189563, 'is_admin': True}] 
  import csv
  with open('output.csv', 'w') as output_csv:
    fields = ['name', 'userid', 'is_admin']
    output_writer = csv.DictWriter(output_csv, fieldnames=fields)
    output_writer.writeheader() << first row of new csv
    for item in big_list:
      output_writer.writerow(item)

--------------------------------------------
JSON
--------------------------------------------
READ - json.load(json_object)
  import json

  with open('file.json') as file_json:
    file_txt = json.load(file_json)
    print(file_txt['text'])

WRITE - json.dump(not_json_yet_object)
  import json
  
  with open('output.json', 'w') as json_file:
    json.dump(turn_to_json, json_file) << 2nd is optional I think