authorization
---------------

CLASS----------------------------
app/controlers/users_controller
class User < ApplicationRecord
	enum role: {user: 0, admin: 1}
end

app/controllers/admin/dashboard_controller.rb
Class Admin::DashboardController < ApplicationController

	before_action :require_admin
	
	def index
	end
	
	def require_admin
		render file: "/public/404" unless current_admin?
	end
end

app/controllers/application_controller.rb

	def current_admin?
		current_user && current_user.admin?
	end

ROUT-----------------------------

namespace admin: do
	get '/dashboard', to: 'dashboard#index'
end

SPEC---------------------------
FEATURE:---------------------------------

  describe "as default user" do
    it 'does not allow default user to see admin dashboard index' do
      user = User.create(username: "fern@gully.com",
                         password: "password",
                         role: 0)

      allow_any_instance_of(ApplicationController).to receive(:current_user).and_return(user)

      visit "/admin/dashboard"

      expect(page).to_not have_link("Email a User")
      expect(page).to have_content("The page you were looking for doesn't exist.")
    end
  end
 
MODEL:-----------------------------------
# spec/models/user_spec.rb
require 'rails_helper'

describe User do
  describe "roles" do
    it "can be created as an admin" do
      user = User.create(username: "penelope",
                         password: "boom",
                         role: 1)

      expect(user.role).to eq("admin")
      expect(user.admin?).to be_truthy
    end

    it "can be created as a default user" do
      user = User.create(username: "sammy",
                         password: "pass",
                         role: 0)

      expect(user.role).to eq("default")
      expect(user.default?).to be_truthy
    end
  end
end