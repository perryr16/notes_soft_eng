-------------------------
INDEX OF 
-------------------------
const a = [10,11,12,10]
a.indexOf(11)
>> 1

a.indexOf(11, 1) // where 2nd is the starting index

-------------------------
RANGE
-------------------------
const a = [1,2,3,4]
a.slice(0,2) // start, end (non inclusive)
>> [1,2]
a.slice(1,-1)
>> [2,3]

-------------------------
DELETE
-------------------------
a.splice(index, howMany, new1, new2, ..., newX )
a.splice(index, 1) // removes that index
a.splice(index, 1, 'DOG', 'CAT') // replaces index with CAT , DOG
* note * it returns the removed objects


-------------------------
ARRAY TO STRING 
-------------------------
const a = ['a', 'b', 'c']

a.join();
>> 'a,b,c'

a.join('');
>> 'abc'

a.join('-');
>> 'a-b-c'

-------------------------
ARRAY TO OBJECT 
-------------------------

-----------------------
SUM/AVG/MIN/MAX
-----------------------
const a = [1,2,3,4]

const sum = arr => arr.reduce((a, v) => a + v, 0) // 0 is starting value, a = accumulator, v = currentValue
const res = sum(a) 
>> 10

OR  
const sum = a.reduce((a, v) => a + v, 0)
>> sum = 10

const avg = arr => arr.reduce((a, b) => a + b, 0) / arr.length
OR 
const avg = reduce((a, b) => a + b, 0) / arr.length
>>avg

const min = (arr) => Math.min(...arr)

const max = (arr) => Math.max(...arr)

------------
INCLUDES 
------------
const a = [1,2,3,1,5]
a.includes(1)
>> true


------------
UNIQ 
------------
uniq = [...new Set(a)]


------------
SORT 
------------
a.sort() will return based on alpha value (1000 is less than 2)
a.sort((a,b) => a - b) // ASCENDING 
a.sort((a,b) => b - a) // DESCENDING